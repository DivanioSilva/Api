package com.ds.api.api.controller;import com.ds.api.api.clients.PersonClient;import com.ds.api.api.domain.PersonDto;import com.ds.api.api.domain.PersonWithIdDto;import com.ds.api.api.exceptions.PersonNotFoundException;import lombok.AllArgsConstructor;import org.springframework.http.MediaType;import org.springframework.web.bind.annotation.*;import java.util.List;@AllArgsConstructor@RestController@RequestMapping(value = "person")public class PersonController {    private final PersonClient personClient;    @PostMapping(value = "/", consumes = MediaType.APPLICATION_JSON_VALUE,            produces = MediaType.APPLICATION_JSON_VALUE)    public PersonWithIdDto savePerson(@RequestBody PersonDto personDto){        return this.personClient.createPerson(personDto);    }    @GetMapping(value = "/all", produces = MediaType.APPLICATION_JSON_VALUE)    public List<PersonWithIdDto> getAll(){        return this.personClient.getAllPersons();    }    @GetMapping(value = "/first-name/{first-name}",produces = MediaType.APPLICATION_JSON_VALUE)    public List<PersonWithIdDto> findByFirstName(@PathVariable("first-name") String firstName){        return this.personClient.findByFirstName(firstName);    }    @PutMapping(value = "/id/{personId}", produces = MediaType.APPLICATION_JSON_VALUE,            consumes = MediaType.APPLICATION_JSON_VALUE)    public PersonDto updatePerson(@PathVariable("personId") Long personId, @RequestBody PersonDto person)            throws PersonNotFoundException {        return this.personClient.updatePerson(personId, person);    }    @DeleteMapping(value = "/id/{personId}")    public void delete(@PathVariable("personId") Long personId){        this.personClient.deleteById(personId);    }}